server:
  port: 8082

#spring:
#  datasource:
#    url: jdbc:postgresql://localhost:5432/postgres
#    username: postgres
#    password: 12345

spring:
  datasource:
    url: jdbc:postgresql://postgres-service:5432/postgres
    username: postgres
    password: 12345

  jpa:
    properties:
      hibernate:
        dialect=org:
          hibernate:
            dialect:
              PostgreSQLDialect:
    hibernate:
      ddl-auto: update
    show-sql: true

#  redis:
#    host: localhost
#    port: 6379

#  kafka:
#    bootstrap-servers: localhost:9092
#
#    consumer:
#      group-id: delivery_group
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


jwt:
  expiration: 2592000 # 30 days = 30 * 24 * 60 * 60
  secretKey: TaqlmGv1iEDMRiFp/pHuID1+T84IABfuA0xXh4GhiUI=



#cd auth-service
#mvn clean package -DskipTests
#docker-compose up --build
#docker compose logs pickup-service